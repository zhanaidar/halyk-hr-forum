{
  "profile": "QA Engineer",
  "specialization": "QA Mobile Automation",
  "file_name": "QA_Mobile_Automation",
  "competencies": [
    {
      "competency": "Знание тестирования приложений, умение работать с симуляторами и эмуляторами",
      "type": "CORE",
      "importance": 85,
      "themes": [
        {
          "theme": "Основы тестирования мобильных приложений: типы тестирования (функциональное, регрессионное, smoke), жизненный цикл мобильного приложения и специфика платформ iOS и Android",
          "questions": [
            {
              "level": "Junior",
              "question": "Что такое smoke тестирование мобильного приложения и когда оно выполняется?",
              "correct_answer": "Базовая проверка критического функционала после сборки перед полным тестированием."
            },
            {
              "level": "Middle",
              "question": "В чем ключевое отличие эмулятора Android от симулятора iOS при тестировании банковского приложения с биометрией?",
              "correct_answer": "Эмулятор виртуализирует ARM-архитектуру и поддерживает биометрию, симулятор имитирует поведение системы."
            },
            {
              "level": "Senior",
              "question": "Как оптимизировать регрессионное тестирование мобильного банкинга при частых релизах, учитывая фрагментацию Android-устройств в Казахстане?",
              "correct_answer": "Приоритизация тестов по риску, параллельный запуск на реальных устройствах популярных моделей через device farm."
            }
          ]
        },
        {
          "theme": "Работа с эмуляторами и симуляторами: различия между эмулятором и симулятором, настройка Android Emulator и iOS Simulator, управление виртуальными устройствами и их конфигурациями",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой командой Android SDK создается новый эмулятор Android из командной строки?",
              "correct_answer": "avdmanager create avd"
            },
            {
              "level": "Middle",
              "question": "Почему для тестирования биометрической аутентификации банковского приложения следует использовать эмулятор вместо симулятора iOS?",
              "correct_answer": "Симулятор не эмулирует аппаратные компоненты биометрии, тестирование неполноценно"
            },
            {
              "level": "Senior",
              "question": "Как оптимизировать время запуска 50 параллельных Android эмуляторов в CI/CD для регрессионного тестирования мобильного банкинга?",
              "correct_answer": "Использовать snapshots с предустановленным приложением, KVM ускорение, легкие API образы без Google Play"
            }
          ]
        },
        {
          "theme": "Автоматизация тестирования мобильных приложений: использование Appium, настройка Desired Capabilities, локаторы элементов (XPath, ID, Accessibility ID), Page Object Model для мобильных приложений",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой Desired Capability в Appium используется для указания пути к APK-файлу банковского приложения?",
              "correct_answer": "app capability с абсолютным путем к APK"
            },
            {
              "level": "Middle",
              "question": "В чем преимущество использования Accessibility ID вместо XPath при поиске элементов в мобильном приложении банка?",
              "correct_answer": "Быстрее работает и устойчив к изменениям UI структуры"
            },
            {
              "level": "Senior",
              "question": "Как спроектировать Page Object Model для банковского приложения с динамическими локаторами на разных версиях Android и iOS, чтобы минимизировать дублирование кода?",
              "correct_answer": "Использовать фабрику локаторов с платформо-специфичными стратегиями и базовый абстрактный класс страницы"
            }
          ]
        },
        {
          "theme": "Продвинутые техники мобильного тестирования: тестирование на реальных устройствах vs эмуляторах, работа с облачными платформами (BrowserStack, Sauce Labs), тестирование жестов, работа с сенсорами и специфичными функциями устройств",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой инструмент в Android Studio позволяет эмулировать различные сенсоры устройства (акселерометр, GPS, гироскоп) для тестирования банковского приложения?",
              "correct_answer": "Extended Controls в AVD Manager эмулятора Android"
            },
            {
              "level": "Middle",
              "question": "В чем ключевое отличие тестирования жестов смахивания в мобильном приложении банка на реальном устройстве через BrowserStack по сравнению с локальным эмулятором?",
              "correct_answer": "Реальная чувствительность тачскрина и точность определения координат жестов"
            },
            {
              "level": "Senior",
              "question": "Как спроектировать стратегию распределения тестов для банковского приложения между облачными устройствами BrowserStack и локальной фермой, учитывая тестирование биометрии, NFC-платежей и критичность времени выполнения тестов?",
              "correct_answer": "Критичные сценарии с биометрией и NFC на реальных устройствах локально, регресс UI и кроссплатформенные проверки в облаке параллельно"
            }
          ]
        }
      ]
    },
    {
      "competency": "Умение написания и поддержания автоматизированных тестов для мобильных приложений",
      "type": "CORE",
      "importance": 90,
      "themes": [
        {
          "theme": "Архитектура автотестов: Page Object Model и Screen Object Pattern для мобильных приложений",
          "questions": [
            {
              "level": "Junior",
              "question": "Что такое Page Object Model в контексте автоматизации мобильных приложений?",
              "correct_answer": "Паттерн проектирования, где каждый экран приложения представлен отдельным классом с элементами и методами."
            },
            {
              "level": "Middle",
              "question": "В чем основное отличие Screen Object Pattern от Page Object Model при тестировании мобильного банкинга с множественными модальными окнами и bottom sheets?",
              "correct_answer": "Screen Object инкапсулирует логику экрана включая навигацию, Page Object только элементы и действия."
            },
            {
              "level": "Senior",
              "question": "Как спроектировать архитектуру автотестов для мобильного приложения банка с единой кодовой базой iOS/Android, чтобы минимизировать дублирование кода при разных локаторах платформ?",
              "correct_answer": "Использовать абстрактный базовый Screen класс с платформо-специфичными наследниками, фабрику экранов и enum для локаторов."
            }
          ]
        },
        {
          "theme": "Работа с локаторами и стратегии поиска элементов в iOS и Android (XPath, Accessibility ID, UiAutomator)",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой тип локатора в Appium используется для поиска элементов по атрибуту accessibility identifier в iOS?",
              "correct_answer": "Accessibility ID"
            },
            {
              "level": "Middle",
              "question": "Почему в банковском приложении Android следует избегать XPath локаторов для поиска кнопок подтверждения платежа?",
              "correct_answer": "XPath медленный, нестабильный при изменении иерархии, снижает надежность тестов"
            },
            {
              "level": "Senior",
              "question": "Как спроектировать стратегию поиска элементов для мультиязычного телеком-приложения с частыми обновлениями UI, чтобы минимизировать поддержку тестов?",
              "correct_answer": "Использовать Accessibility ID и testID, требовать уникальные идентификаторы от разработчиков, избегать текстовых локаторов"
            }
          ]
        },
        {
          "theme": "Управление тестовыми данными и состоянием приложения между тестами (setup/teardown, deep links, mock API)",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой метод жизненного цикла теста в Appium используется для очистки данных приложения перед каждым тестом?",
              "correct_answer": "setUp или BeforeEach с driver.resetApp()"
            },
            {
              "level": "Middle",
              "question": "В банковском приложении нужно тестировать экран с историей транзакций. Когда лучше использовать mock API вместо реальных тестовых данных через API?",
              "correct_answer": "Для негативных сценариев, граничных случаев и контроля состояния ответов"
            },
            {
              "level": "Senior",
              "question": "Как спроектировать стратегию управления состоянием для автотестов мобильного банкинга, где критична изоляция данных между запусками на shared test environment?",
              "correct_answer": "Комбинация уникальных пользовательских идентификаторов, deep links для setup, API cleanup в teardown"
            }
          ]
        },
        {
          "theme": "Обработка нестабильных тестов: явные и неявные ожидания, синхронизация, retry-механизмы",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой метод Appium используется для установки явного ожидания видимости элемента перед взаимодействием?",
              "correct_answer": "WebDriverWait с ExpectedConditions.visibilityOfElementLocated"
            },
            {
              "level": "Middle",
              "question": "В банковском приложении список транзакций загружается асинхронно с разной скоростью. Какой подход ожидания оптимален и почему?",
              "correct_answer": "Явное ожидание с FluentWait, позволяет задать polling interval и игнорировать исключения"
            },
            {
              "level": "Senior",
              "question": "При тестировании мобильного банкинга 15% тестов падают из-за таймаутов при загрузке данных о курсах валют. Как архитектурно решить проблему без увеличения общего времени прогона?",
              "correct_answer": "Реализовать conditional retry только для network-зависимых шагов с экспоненциальным backoff и логированием причин падения"
            }
          ]
        }
      ]
    },
    {
      "competency": "Навыки работы с Allure TestOps",
      "type": "DAILY",
      "importance": 60,
      "themes": [
        {
          "theme": "Интеграция мобильных автотестов с Allure TestOps и настройка запуска тест-сьютов",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой параметр в конфигурации мобильного автотеста отвечает за отправку результатов в Allure TestOps?",
              "correct_answer": "allure.results.directory с последующей загрузкой через allurectl"
            },
            {
              "level": "Middle",
              "question": "В мобильном банкинге нужно запускать разные тест-сьюты для iOS и Android с разными capabilities. Как организовать это в Allure TestOps через один Launch?",
              "correct_answer": "Создать отдельные Job Plans с platform-специфичными параметрами и объединить через Test Plan"
            },
            {
              "level": "Senior",
              "question": "После интеграции Appium-тестов мобильного банка с Allure TestOps половина тестов падает с timeout при параллельном запуске через Job, хотя локально проходят. Какова наиболее вероятная причина?",
              "correct_answer": "Недостаточное количество одновременных сессий на Selenium Grid или конфликт портов Appium"
            }
          ]
        },
        {
          "theme": "Организация тест-кейсов и управление тестовой документацией в Allure TestOps",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой элемент Allure TestOps используется для группировки тест-кейсов по функциональным областям мобильного приложения банка?",
              "correct_answer": "Test Case Tree с использованием папок и категорий"
            },
            {
              "level": "Middle",
              "question": "В чем разница между использованием Manual и Automated статусов тест-кейсов в Allure TestOps при тестировании мобильного приложения для переводов?",
              "correct_answer": "Manual выполняются вручную тестировщиком, Automated запускаются автоматически из CI/CD"
            },
            {
              "level": "Senior",
              "question": "Как организовать версионирование тест-кейсов в Allure TestOps для поддержки нескольких релизов мобильного банкинга одновременно, если возникают конфликты при синхронизации из кода?",
              "correct_answer": "Использовать Test Case Branches с привязкой к тегам релизов и настроить фильтрацию по версиям через Custom Fields"
            }
          ]
        },
        {
          "theme": "Анализ результатов тестирования и создание отчетов по дефектам в Allure TestOps",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой раздел Allure TestOps используется для создания отчета по дефекту на основе упавшего теста мобильного приложения банка?",
              "correct_answer": "Defects или кнопка Create defect в результатах теста"
            },
            {
              "level": "Middle",
              "question": "В мобильном банкинге некоторые тесты падают нестабильно из-за задержек сети. Какой статус в Allure TestOps поможет отделить такие кейсы от реальных багов при анализе результатов?",
              "correct_answer": "Flaky или установка Muted статуса с причиной"
            },
            {
              "level": "Senior",
              "question": "При автоматизации тестирования мобильного приложения телеком-оператора 40% тестов падают из-за проблем инфраструктуры. Как в Allure TestOps настроить фильтрацию отчетов, чтобы команда видела только реальные дефекты продукта?",
              "correct_answer": "Создать Custom fields для категоризации, настроить фильтры по failure reasons и использовать Test Cases patterns с тегами инфраструктуры"
            }
          ]
        },
        {
          "theme": "Настройка дашбордов, метрик качества и интеграция с Jira через Allure TestOps",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой тип виджета в Allure TestOps используется для отображения процента прохождения автотестов мобильного приложения?",
              "correct_answer": "Pie chart или Summary widget с метрикой Pass Rate"
            },
            {
              "level": "Middle",
              "question": "Какие метрики качества следует добавить на дашборд для отслеживания стабильности автотестов Android-приложения банка с учетом разных версий ОС?",
              "correct_answer": "Flaky tests rate, Pass rate by OS version, Test execution duration"
            },
            {
              "level": "Senior",
              "question": "При интеграции Allure TestOps с Jira тесты регрессии мобильного банкинга не синхронизируют статусы дефектов. Какие три наиболее вероятные причины проблемы?",
              "correct_answer": "Неверный JQL-фильтр в настройках интеграции, отсутствие permissions у service account, некорректный mapping статусов"
            }
          ]
        }
      ]
    },
    {
      "competency": "Навыки работы с Appium",
      "type": "CORE",
      "importance": 85,
      "themes": [
        {
          "theme": "Архитектура Appium и настройка тестового окружения (Desired Capabilities, Appium Server, драйверы для iOS/Android)",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой Desired Capability указывает на уникальный идентификатор Android-приложения банка для запуска теста в Appium?",
              "correct_answer": "appPackage capability с bundle identifier приложения"
            },
            {
              "level": "Middle",
              "question": "В чем разница между использованием UIAutomator2 и Espresso драйверов при тестировании банковского Android-приложения с WebView компонентами?",
              "correct_answer": "UIAutomator2 работает вне процесса приложения, Espresso требует инструментации и быстрее"
            },
            {
              "level": "Senior",
              "question": "Как оптимизировать архитектуру Appium-инфраструктуры для параллельного тестирования iOS/Android приложений банка на 50+ устройствах с минимизацией времени инициализации сессий?",
              "correct_answer": "Использовать Appium Grid с предварительно прогретыми драйверами и session reuse через capability relaxedSecurity"
            }
          ]
        },
        {
          "theme": "Стратегии локаторов и взаимодействие с элементами мобильных приложений (XPath, Accessibility ID, UiAutomator2, XCUITest)",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой атрибут элемента в iOS приложении банка используется для локатора Accessibility ID?",
              "correct_answer": "Атрибут accessibilityIdentifier элемента"
            },
            {
              "level": "Middle",
              "question": "Почему в мобильном приложении банка не рекомендуется использовать XPath для поиска элементов вместо UiAutomator2 селекторов на Android?",
              "correct_answer": "XPath медленнее из-за обхода всего дерева элементов и менее стабилен"
            },
            {
              "level": "Senior",
              "question": "Как оптимизировать стратегию локаторов для списка транзакций в банковском приложении с динамически подгружаемым контентом, чтобы минимизировать flaky tests при автоматизации на iOS и Android?",
              "correct_answer": "Использовать Accessibility ID с явными ожиданиями visibility, кастомные предикаты для XCUITest и resourceId для UiAutomator2 с индексацией"
            }
          ]
        },
        {
          "theme": "Работа с жестами и нативными функциями устройств (свайпы, тап, зум, работа с GPS, камерой, push-уведомлениями)",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой метод Appium используется для выполнения свайпа на мобильном устройстве?",
              "correct_answer": "TouchAction или W3C Actions с методом swipe"
            },
            {
              "level": "Middle",
              "question": "В мобильном банкинге нужно протестировать двухфакторную аутентификацию через SMS. Как в Appium перехватить push-уведомление с кодом без реального SMS?",
              "correct_answer": "Использовать mobile:getNotifications для Android или перехват через mock сервера"
            },
            {
              "level": "Senior",
              "question": "При автоматизации тестов геолокации для банковских отделений в Казахстане столкнулись с нестабильностью. Как спроектировать архитектуру для надежного тестирования GPS-функционала с учетом различных permission-сценариев?",
              "correct_answer": "Использовать setLocation с координатами, PageObject для permission dialogs, отдельный слой управления capabilities с appium:gpsEnabled"
            }
          ]
        },
        {
          "theme": "Синхронизация, ожидания и обработка сложных сценариев (Explicit/Implicit waits, переключение контекстов WebView/Native, работа с клавиатурой)",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой метод Appium используется для установки явного ожидания (Explicit Wait) элемента в мобильном приложении банка?",
              "correct_answer": "WebDriverWait с ExpectedConditions для ожидания visibility или clickability элемента"
            },
            {
              "level": "Middle",
              "question": "В банковском приложении есть WebView для отображения условий кредита и Native компоненты. Как переключаться между контекстами и в каком случае использовать каждый подход?",
              "correct_answer": "driver.context('WEBVIEW') для WebView контента, driver.context('NATIVE_APP') для нативных элементов, получить список через getContextHandles()"
            },
            {
              "level": "Senior",
              "question": "В приложении телеком-оператора при вводе номера телефона периодически возникают flaky-тесты из-за анимации клавиатуры и задержек рендеринга. Как спроектировать надежную стратегию синхронизации для этого сценария?",
              "correct_answer": "Комбинировать FluentWait с кастомными условиями проверки атрибутов элемента, отключать анимации через desired capabilities, использовать polling interval"
            }
          ]
        }
      ]
    }
  ]
}