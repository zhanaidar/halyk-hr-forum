{
  "profile": "QA Engineer",
  "specialization": "QA Manual / Functional",
  "file_name": "QA_Manual",
  "competencies": [
    {
      "competency": "Навык написания тест-кейсов",
      "type": "CORE",
      "importance": 90,
      "themes": [
        {
          "theme": "Структура и обязательные элементы тест-кейса",
          "questions": [
            {
              "level": "Junior",
              "question": "Какие три обязательных элемента должен содержать любой тест-кейс?",
              "correct_answer": "Предусловия, шаги выполнения и ожидаемый результат"
            },
            {
              "level": "Middle",
              "question": "В чем разница между шагами тест-кейса для API интеграции с платежным шлюзом банка и UI-теста той же функции?",
              "correct_answer": "API шаги содержат технические параметры запроса, UI описывает действия пользователя"
            },
            {
              "level": "Senior",
              "question": "Как оптимизировать структуру тест-кейсов для регресса мобильного банкинга с 50+ бизнес-флоу, чтобы минимизировать дублирование и поддержку?",
              "correct_answer": "Применить модульную структуру с переиспользуемыми preconditions и shared steps"
            }
          ]
        },
        {
          "theme": "Техники тест-дизайна при написании тест-кейсов",
          "questions": [
            {
              "level": "Junior",
              "question": "Какая техника тест-дизайна используется для проверки граничных значений поля ввода суммы перевода от 1 до 1000000 тенге?",
              "correct_answer": "Boundary Value Analysis (анализ граничных значений)"
            },
            {
              "level": "Middle",
              "question": "В чем разница между применением Pairwise Testing и All Combinations при тестировании формы регистрации корпоративного клиента банка с 8 полями по 3 значения каждое?",
              "correct_answer": "Pairwise покрывает все пары значений, сокращая количество тест-кейсов с 6561 до ~20"
            },
            {
              "level": "Senior",
              "question": "Как оптимизировать набор тест-кейсов для мобильного банкинга с 15 модулями, используя Risk-Based Testing, при ограниченном времени регресса перед релизом?",
              "correct_answer": "Приоритизировать критичные платежные операции и авторизацию, применить Pairwise для некритичных модулей, использовать smoke-suite"
            }
          ]
        },
        {
          "theme": "Приоритизация и организация тест-кейсов в тест-сьютах",
          "questions": [
            {
              "level": "Junior",
              "question": "Что такое тест-сьют в контексте тестирования мобильного банкинга?",
              "correct_answer": "Набор логически сгруппированных тест-кейсов для выполнения."
            },
            {
              "level": "Middle",
              "question": "По каким критериям следует приоритизировать тест-кейсы для регрессионного тестирования платежной системы банка при ограниченном времени?",
              "correct_answer": "Критичность бизнес-функций, частота использования, история дефектов, риски."
            },
            {
              "level": "Senior",
              "question": "Как спроектировать структуру тест-сьютов для тестирования системы дистанционного банковского обслуживания с учетом требований НБРК к регуляторным проверкам и частых релизов?",
              "correct_answer": "Разделить на regulatory compliance suite, smoke/sanity, функциональные модули, интеграционные, с тегированием по приоритетам и возможностью быстрой выборки критичных проверок."
            }
          ]
        },
        {
          "theme": "Поддержка и актуализация тест-кейсов в процессе разработки",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой статус нужно присвоить тест-кейсу после изменения требований к функционалу мобильного приложения банка?",
              "correct_answer": "Статус 'Требует обновления' или 'Draft' до актуализации шагов"
            },
            {
              "level": "Middle",
              "question": "Как определить приоритет актуализации тест-кейсов при изменении API интеграции с платежным шлюзом: обновить сначала smoke-тесты или регрессионные?",
              "correct_answer": "Сначала smoke-тесты критичных платежных сценариев, затем регрессионные"
            },
            {
              "level": "Senior",
              "question": "Команда выпускает релизы каждые 2 недели, 60% тест-кейсов устаревают после спринта. Какую архитектуру поддержки тест-кейсов внедрить для телеком-продукта с частыми изменениями тарифов?",
              "correct_answer": "Модульная структура с переиспользуемыми компонентами, версионирование по релизам, автоматизированная трассировка требований"
            }
          ]
        }
      ]
    },
    {
      "competency": "Навык кроссплатформенного тестирования",
      "type": "CORE",
      "importance": 80,
      "themes": [
        {
          "theme": "Основы кроссплатформенного тестирования: различия в поведении веб-приложений в браузерах (Chrome, Firefox, Safari, Edge)",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой инструмент браузера позволяет эмулировать различные user-agent для тестирования кроссбраузерной совместимости веб-приложения банка?",
              "correct_answer": "Developer Tools (DevTools) во вкладке Network Conditions или Device Mode"
            },
            {
              "level": "Middle",
              "question": "При тестировании личного кабинета банка вы обнаружили, что в Safari датапикер не открывается, а в Chrome работает корректно. В чем наиболее вероятная причина различия?",
              "correct_answer": "Safari не поддерживает нативный input type date или есть конфликт JavaScript событий"
            },
            {
              "level": "Senior",
              "question": "Как спроектировать стратегию кроссбраузерного тестирования для мобильного банкинга, если Safari на iOS занимает 65% трафика, а ресурсы на тестирование ограничены?",
              "correct_answer": "Приоритизировать Safari iOS с полным покрытием, для остальных браузеров smoke-тесты критичных сценариев, автоматизация регрессии"
            }
          ]
        },
        {
          "theme": "Тестирование мобильных приложений на различных платформах: iOS vs Android, особенности UI/UX и нативных функций",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой инструмент используется для тестирования мобильного приложения банка одновременно на iOS и Android устройствах?",
              "correct_answer": "BrowserStack или Sauce Labs для кроссплатформенного тестирования"
            },
            {
              "level": "Middle",
              "question": "В чем основное различие в тестировании push-уведомлений для банковского приложения на iOS и Android?",
              "correct_answer": "iOS требует сертификаты APNs, Android использует FCM с токенами"
            },
            {
              "level": "Senior",
              "question": "Как спроектировать стратегию регрессионного тестирования биометрической аутентификации для банковского приложения, учитывая различия Face ID и BiometricPrompt API?",
              "correct_answer": "Создать отдельные test suites с mock-данными для каждой платформы, учитывая различия в обработке ошибок и UI flow"
            }
          ]
        },
        {
          "theme": "Стратегии тестирования десктопных приложений на Windows, macOS и Linux: совместимость, производительность и специфичные баги",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой инструмент используется для эмуляции различных разрешений экрана при тестировании десктопного банковского приложения на Windows?",
              "correct_answer": "Настройки масштабирования дисплея или виртуальные машины с разными разрешениями"
            },
            {
              "level": "Middle",
              "question": "В чем основное различие между тестированием обработки путей к файлам в банковском приложении на Windows и Linux при импорте выписок?",
              "correct_answer": "Windows использует обратный слэш и буквы дисков, Linux — прямой слэш"
            },
            {
              "level": "Senior",
              "question": "Как спроектировать стратегию регрессионного тестирования производительности для клиента интернет-банкинга на трех ОС, учитывая ограниченные ресурсы команды из 4 QA?",
              "correct_answer": "Приоритизация критичных сценариев, автоматизация smoke-тестов производительности, ротационное глубокое тестирование по ОС"
            }
          ]
        },
        {
          "theme": "Управление тестовой средой и приоритизация платформ: матрица совместимости, эмуляторы vs реальные устройства, оптимизация покрытия",
          "questions": [
            {
              "level": "Junior",
              "question": "Что такое матрица совместимости в контексте кроссплатформенного тестирования мобильного банкинга?",
              "correct_answer": "Таблица комбинаций ОС, версий, устройств и браузеров для тестирования."
            },
            {
              "level": "Middle",
              "question": "В каких случаях для тестирования мобильного приложения банка следует использовать реальные устройства вместо эмуляторов?",
              "correct_answer": "При тестировании камеры, NFC-платежей, биометрии, производительности и специфичных багов устройств."
            },
            {
              "level": "Senior",
              "question": "Как спроектировать оптимальную стратегию приоритизации платформ для тестирования банковского веб-приложения с ограниченным бюджетом на устройства?",
              "correct_answer": "Анализ аналитики пользователей, выделение топ-5 комбинаций, риск-ориентированный подход, smoke на эмуляторах, критичные сценарии на реальных устройствах."
            }
          ]
        }
      ]
    },
    {
      "competency": "Знание регламентов обработки заявок (SLA, приоритизация)",
      "type": "DAILY",
      "importance": 70,
      "themes": [
        {
          "theme": "Определение и классификация приоритетов дефектов (Critical, High, Medium, Low)",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой приоритет дефекта следует установить, если в мобильном приложении банка не работает функция входа по биометрии, но доступен вход по паролю?",
              "correct_answer": "High, так как затронута основная функция, но есть обходной путь"
            },
            {
              "level": "Middle",
              "question": "В чем разница между приоритетом Critical и High для дефекта в системе обработки платежей телеком-оператора, если транзакции проходят с задержкой 10 минут?",
              "correct_answer": "High — система работает с деградацией, Critical — если полная блокировка бизнес-процесса"
            },
            {
              "level": "Senior",
              "question": "Продакт требует понизить приоритет дефекта с Critical до High для падения интеграции с НБРК, аргументируя малым процентом пользователей. Какие риски и как обоснуете отказ?",
              "correct_answer": "Регуляторные риски, штрафы НБРК, репутационные потери. Критичность определяется не количеством пользователей, а бизнес-импактом"
            }
          ]
        },
        {
          "theme": "Расчет и мониторинг SLA для обработки багов и запросов на тестирование",
          "questions": [
            {
              "level": "Junior",
              "question": "Что такое SLA в контексте обработки багов в банковской системе?",
              "correct_answer": "Соглашение об уровне сервиса, определяющее максимальное время обработки дефектов"
            },
            {
              "level": "Middle",
              "question": "Какой приоритет баг-репорта следует установить, если в мобильном банкинге не работает перевод между своими счетами для 30% пользователей Android?",
              "correct_answer": "Critical/P1, так как затронута критическая функция с массовым влиянием"
            },
            {
              "level": "Senior",
              "question": "Команда системно нарушает SLA по критическим багам из-за длительного согласования фиксов со службой безопасности банка. Как оптимизировать процесс?",
              "correct_answer": "Внедрить параллельное согласование, создать pre-approved список изменений и отдельный SLA для ИБ"
            }
          ]
        },
        {
          "theme": "Эскалация заявок: критерии, процессы и коммуникация со стейкхолдерами",
          "questions": [
            {
              "level": "Junior",
              "question": "Что такое эскалация заявки в контексте обработки инцидентов?",
              "correct_answer": "Передача заявки на более высокий уровень поддержки или руководству"
            },
            {
              "level": "Middle",
              "question": "В каких случаях необходимо использовать функциональную эскалацию вместо иерархической при обработке критического инцидента в банковской системе?",
              "correct_answer": "Когда текущей команде не хватает технической экспертизы для решения"
            },
            {
              "level": "Senior",
              "question": "Клиент банка жалуется, что критичная P1 заявка не эскалирована после истечения SLA. При проверке выяснилось, что автоэскалация сработала, но стейкхолдеры не среагировали. Как предотвратить подобные ситуации?",
              "correct_answer": "Внедрить многоуровневое оповещение с резервными контактами и дежурными ротациями"
            }
          ]
        },
        {
          "theme": "Управление backlog дефектов и оптимизация процесса их обработки",
          "questions": [
            {
              "level": "Junior",
              "question": "Что такое backlog дефектов в контексте работы QA-инженера?",
              "correct_answer": "Список всех зарегистрированных, но еще не исправленных дефектов в проекте."
            },
            {
              "level": "Middle",
              "question": "Какие критерии следует использовать для приоритизации дефектов в backlog мобильного банкинга при подготовке к релизу?",
              "correct_answer": "Критичность для бизнеса, влияние на пользователей, частота воспроизведения и сложность исправления."
            },
            {
              "level": "Senior",
              "question": "В телеком-проекте backlog дефектов достиг 500+ записей, команда не успевает обрабатывать новые. Какие действия предпримете для оптимизации?",
              "correct_answer": "Провести grooming сессию, закрыть устаревшие дефекты, ввести жесткие критерии приемки, автоматизировать регрессию, пересмотреть SLA."
            }
          ]
        }
      ]
    },
    {
      "competency": "Навыки SQL",
      "type": "DAILY",
      "importance": 60,
      "themes": [
        {
          "theme": "Основы SQL: SELECT-запросы, фильтрация данных (WHERE, LIKE, IN) и сортировка результатов",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой оператор SQL используется для выборки клиентов банка, чьи ИИН начинаются с '950'?",
              "correct_answer": "LIKE '950%' в условии WHERE"
            },
            {
              "level": "Middle",
              "question": "В чем разница между использованием IN и множественных OR при фильтрации транзакций по 15 филиалам банка?",
              "correct_answer": "IN повышает читаемость кода и производительность, упрощает поддержку запроса"
            },
            {
              "level": "Senior",
              "question": "Почему запрос выборки абонентов с LIKE '%87012%' на таблице из 5 млн записей выполняется 40 секунд?",
              "correct_answer": "LIKE с ведущим wildcard не использует индекс, требуется full table scan"
            }
          ]
        },
        {
          "theme": "Объединение таблиц: INNER JOIN, LEFT JOIN, RIGHT JOIN и работа с внешними ключами",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой тип JOIN вернёт все записи из таблицы clients, даже если у клиента нет связанных записей в таблице accounts?",
              "correct_answer": "LEFT JOIN возвращает все записи из левой таблицы."
            },
            {
              "level": "Middle",
              "question": "В базе банка таблица transactions ссылается на clients через client_id. При тестировании вы обнаружили транзакции с client_id = NULL. Какой JOIN покажет эти записи при объединении с таблицей clients?",
              "correct_answer": "LEFT JOIN от transactions к clients покажет записи с NULL."
            },
            {
              "level": "Senior",
              "question": "После миграции данных в банковской системе обнаружено, что LEFT JOIN между payments и customers возвращает дубликаты платежей. При этом INNER JOIN работает корректно. Какая наиболее вероятная причина проблемы?",
              "correct_answer": "Отсутствие или нарушение внешнего ключа создало дубли в customers."
            }
          ]
        },
        {
          "theme": "Агрегатные функции и группировка: COUNT, SUM, AVG, GROUP BY, HAVING для анализа тестовых данных",
          "questions": [
            {
              "level": "Junior",
              "question": "Какая агрегатная функция SQL используется для подсчета количества транзакций клиента в таблице payments?",
              "correct_answer": "COUNT() подсчитывает количество строк или непустых значений."
            },
            {
              "level": "Middle",
              "question": "В таблице test_results нужно найти типы дефектов с более чем 10 случаями. Почему нельзя использовать WHERE для фильтрации по COUNT(*)?",
              "correct_answer": "WHERE фильтрует до группировки, нужен HAVING для фильтрации агрегатных результатов."
            },
            {
              "level": "Senior",
              "question": "При анализе транзакций мобильного банкинга запрос с GROUP BY по user_id выполняется 45 секунд на 10 млн записей. Какие проблемы производительности проверите первыми?",
              "correct_answer": "Отсутствие индекса на user_id, неэффективные агрегации, отсутствие партиционирования таблицы."
            }
          ]
        },
        {
          "theme": "Подзапросы и операторы модификации данных: вложенные SELECT, INSERT, UPDATE, DELETE для подготовки тестовых наборов",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой оператор SQL используется для удаления тестовых транзакций клиентов с балансом меньше 100 тенге из таблицы accounts на основе данных из таблицы transactions?",
              "correct_answer": "DELETE FROM accounts WHERE account_id IN (SELECT account_id FROM transactions)"
            },
            {
              "level": "Middle",
              "question": "В чем разница между использованием подзапроса в WHERE и JOIN при обновлении статусов абонентов телеком-оператора, которые не совершали звонков более 90 дней?",
              "correct_answer": "Подзапрос читает данные дважды, JOIN эффективнее для больших объемов данных"
            },
            {
              "level": "Senior",
              "question": "Почему массовый INSERT с подзапросом для копирования 5 миллионов тестовых транзакций банка вызывает блокировку таблицы и как это исправить?",
              "correct_answer": "Используйте батчинг с LIMIT или INSERT с временной таблицей и коммитами"
            }
          ]
        }
      ]
    },
    {
      "competency": "Навыки работы с СУБД",
      "type": "DAILY",
      "importance": 60,
      "themes": [
        {
          "theme": "Основы SQL: SELECT-запросы, фильтрация и сортировка данных",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой оператор SQL используется для фильтрации записей клиентов банка по определенному условию в SELECT-запросе?",
              "correct_answer": "WHERE для фильтрации строк по условию"
            },
            {
              "level": "Middle",
              "question": "В чем разница между ORDER BY и WHERE при выборке транзакций клиентов телеком-оператора, и в каком порядке они должны применяться?",
              "correct_answer": "WHERE фильтрует данные, ORDER BY сортирует результат; WHERE идет перед ORDER BY"
            },
            {
              "level": "Senior",
              "question": "При тестировании выборки 5 миллионов банковских транзакций запрос с WHERE amount > 100000 ORDER BY transaction_date выполняется 45 секунд. Какие проблемы производительности могут быть и как диагностировать?",
              "correct_answer": "Отсутствие индексов на amount и transaction_date; проверить через EXPLAIN план выполнения запроса"
            }
          ]
        },
        {
          "theme": "JOIN-операции и работа с связанными таблицами",
          "questions": [
            {
              "level": "Junior",
              "question": "Какой тип JOIN вернёт все записи из таблицы clients, даже если нет совпадений в таблице accounts?",
              "correct_answer": "LEFT JOIN или LEFT OUTER JOIN"
            },
            {
              "level": "Middle",
              "question": "В банковской системе нужно получить клиентов без активных счетов. Какой JOIN использовать с условием WHERE accounts.id IS NULL?",
              "correct_answer": "LEFT JOIN с проверкой на NULL в правой таблице"
            },
            {
              "level": "Senior",
              "question": "При тестировании выборки транзакций клиентов запрос с INNER JOIN работает 8 секунд на 2 млн записей. Какие первые шаги troubleshooting?",
              "correct_answer": "Проверить индексы на ключах JOIN и EXPLAIN план запроса"
            }
          ]
        },
        {
          "theme": "Агрегатные функции и группировка данных (GROUP BY, HAVING)",
          "questions": [
            {
              "level": "Junior",
              "question": "Какая агрегатная функция используется для подсчета количества транзакций клиента в таблице payments?",
              "correct_answer": "COUNT() для подсчета строк или транзакций"
            },
            {
              "level": "Middle",
              "question": "В чем разница между WHERE и HAVING при анализе суммы платежей клиентов банка по филиалам?",
              "correct_answer": "WHERE фильтрует строки до группировки, HAVING фильтрует результаты после агрегации"
            },
            {
              "level": "Senior",
              "question": "Почему запрос с GROUP BY по client_id работает медленно на 50 млн записей транзакций, если индекс существует?",
              "correct_answer": "Возможно отсутствие составного индекса или высокая кардинальность требует партиционирования таблицы"
            }
          ]
        },
        {
          "theme": "Подзапросы, представления (VIEW) и оптимизация запросов для тестирования",
          "questions": [
            {
              "level": "Junior",
              "question": "Что такое VIEW в реляционных базах данных и для чего он используется?",
              "correct_answer": "Виртуальная таблица, сохраняющая результат SELECT-запроса для переиспользования."
            },
            {
              "level": "Middle",
              "question": "В каком случае использовать подзапрос в WHERE вместо JOIN при тестировании выборки активных клиентов банка с транзакциями за последний месяц?",
              "correct_answer": "Когда нужна проверка существования записей без дублирования строк основной таблицы."
            },
            {
              "level": "Senior",
              "question": "При тестировании отчета по абонентам телеком-оператора VIEW с тремя JOIN работает 45 секунд на 5 млн записей. Какие первые три действия для диагностики проблемы производительности?",
              "correct_answer": "EXPLAIN план запроса, проверка индексов на JOIN-полях, анализ статистики таблиц."
            }
          ]
        }
      ]
    }
  ]
}